#    Sh1t-UB (telegram userbot by sh1tn3t)
#    Copyright (C) 2021-2022 Sh1tN3t

#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.

#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

from pyrogram import Client, types
from .. import loader, utils


@loader.module(name="Settings", author="sh1tn3t | shashachkaaa")
class SettingsMod(loader.Module):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞"""

    async def setprefix_cmd(self, app: Client, message: types.Message, args: str):
        """–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å, –º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —à—Ç—É–∫ —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–æ–º. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: setprefix <–ø—Ä–µ—Ñ–∏–∫—Å> [–ø—Ä–µ—Ñ–∏–∫—Å, ...]"""
        if not (args := args.split()):
            return await utils.answer(
                message, "<emoji id=5436113877181941026>‚ùì</emoji> <b>–ù–∞ –∫–∞–∫–æ–π –ø—Ä–µ—Ñ–∏–∫—Å –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å?</b>")

        self.db.set("sh1t-ub.loader", "prefixes", list(set(args)))
        prefixes = ", ".join(f"<code>{prefix}</code>" for prefix in args)
        return await utils.answer(
            message, f"<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ü—Ä–µ—Ñ–∏–∫—Å –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞</b> ¬´{prefixes}¬ª")

    async def addalias_cmd(self, app: Client, message: types.Message, args: str):
        """–î–æ–±–∞–≤–∏—Ç—å –∞–ª–∏–∞—Å. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: addalias <–Ω–æ–≤—ã–π –∞–ª–∏–∞—Å> <–∫–æ–º–∞–Ω–¥–∞>"""
        if not (args := args.lower().split(maxsplit=1)):
            return await utils.answer(
                message, "<emoji id=5436113877181941026>‚ùì</emoji> <b>–ö–∞–∫–æ–π –∞–ª–∏–∞—Å –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å?</b>")

        if len(args) != 2:
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã."
                         "<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ü—Ä–∏–º–µ—Ä:</b> <code>addalias</code> (–Ω–æ–≤—ã–π –∞–ª–∏–∞—Å) (–∫–æ–º–∞–Ω–¥–∞)"
            )

        aliases = self.all_modules.aliases
        if args[0] in aliases:
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–¢–∞–∫–æ–π –∞–ª–∏–∞—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</b>")

        if not self.all_modules.command_handlers.get(args[1]):
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç</b>")

        aliases[args[0]] = args[1]
        self.db.set("sh1t-ub.loader", "aliases", aliases)

        return await utils.answer(
            message, f"<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ê–ª–∏–∞—Å</b> ¬´<code>{args[0]}</code>¬ª <b>–¥–ª—è –∫–æ–º–∞–Ω–¥—ã</b> ¬´<code>{args[1]}</code>¬ª <b>–±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω</b>")

    async def delalias_cmd(self, app: Client, message: types.Message, args: str):
        """–£–¥–∞–ª–∏—Ç—å –∞–ª–∏–∞—Å. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: delalias <–∞–ª–∏–∞—Å>"""
        if not (args := args.lower()):
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ö–∞–∫–æ–π –∞–ª–∏–∞—Å –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å?</b>")

        aliases = self.all_modules.aliases
        if args not in aliases:
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–¢–∞–∫–æ–≥–æ –∞–ª–∏–∞—Å–∞ –Ω–µ—Ç</b>")

        del aliases[args]
        self.db.set("sh1t-ub.loader", "aliases", aliases)

        return await utils.answer(
            message, f"<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ê–ª–∏–∞—Å</b> ¬´<code>{args}</code>¬ª <b>–±—ã–ª —É–¥–∞–ª–µ–Ω</b>")

    async def aliases_cmd(self, app: Client, message: types.Message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–ª–∏–∞—Å—ã"""
        aliases = self.all_modules.aliases
        if not aliases:
            return await utils.answer(
                message, "<emoji id=5463044060862244442>ü§∑‚Äç‚ôÇ</emoji> <b>–ê–ª–∏–∞—Å—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</b>")

        return await utils.answer(
            message, "<emoji id=5956561916573782596>üìÑ</emoji> <b>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–ª–∏–∞—Å–æ–≤:</b>\n" + "\n".join(
                f"<emoji id=4972281662894244560>üõë</emoji> <code>{alias}</code> ‚ûú <code>{command}</code>"
                for alias, command in aliases.items()
            )
        )

    async def hidemod_cmd(self, app: Client, message: types.Message, args: str):
        """–°–∫—Ä—ã—Ç—å –º–æ–¥—É–ª—å. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: hidemod <–Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è>"""
        if not args:
            return await utils.answer(
                message, "<emoji id=5436113877181941026>‚ùì</emoji> <b>–ö–∞–∫–æ–π –º–æ–¥—É–ª—å –Ω—É–∂–Ω–æ —Å–∫—Ä—ã—Ç—å?</b>"
            )

        module_name = args.lower()
        hide_mods = self.db.get("help", "hide_mods", [])
        
        all_modules = [module.name.lower() for module in self.all_modules.modules]
        
        module_name, text = utils.find_closest_module_name(module_name, all_modules)
        
        if module_name in hide_mods:
            return await utils.answer(
                message, f"<emoji id=5210952531676504517>‚ùå</emoji> <b>–ú–æ–¥—É–ª—å</b> ¬´<code>{module_name}</code>¬ª <b>—É–∂–µ —Å–∫—Ä—ã—Ç</b>\n\n{text}"
            )

        hide_mods.append(module_name)
        self.db.set("help", "hide_mods", hide_mods)

        return await utils.answer(
            message, f"<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ú–æ–¥—É–ª—å</b> ¬´<code>{module_name}</code>¬ª <b>—Å–∫—Ä—ã—Ç</b>\n\n{text}"
        )

    async def showmod_cmd(self, app: Client, message: types.Message, args: str):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–π –º–æ–¥—É–ª—å. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: showmod <–Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è>"""
        if not args:
            return await utils.answer(
                message, "<emoji id=5436113877181941026>‚ùì</emoji> <b>–ö–∞–∫–æ–π –º–æ–¥—É–ª—å –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å?</b>"
            )

        module_name = args.lower()
        hide_mods = self.db.get("help", "hide_mods", [])
        
        all_modules = [module.name.lower() for module in self.all_modules.modules]
        
        module_name, text = utils.find_closest_module_name(module_name, all_modules)
        
        if module_name not in hide_mods:
            return await utils.answer(
                message, f"<emoji id=5210952531676504517>‚ùå</emoji> <b>–ú–æ–¥—É–ª—å</b> ¬´<code>{module_name}</code>¬ª <b>–Ω–µ —Å–∫—Ä—ã—Ç</b>\n\n{text}"
            )

        hide_mods.remove(module_name)
        self.db.set("help", "hide_mods", hide_mods)

        return await utils.answer(
            message, f"<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ú–æ–¥—É–ª—å</b> ¬´<code>{module_name}</code>¬ª <b>—Ç–µ–ø–µ—Ä—å –≤–∏–¥–µ–Ω</b>\n\n{text}"
        )

    async def hiddenmods_cmd(self, app: Client, message: types.Message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫—Ä—ã—Ç—ã—Ö –º–æ–¥—É–ª–µ–π. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: hiddenmods"""
        hide_mods = self.db.get("help", "hide_mods", [])
        
        if not hide_mods:
            return await utils.answer(
                message, "<emoji id=5463044060862244442>ü§∑‚Äç‚ôÇ</emoji> <b>–°–∫—Ä—ã—Ç—ã—Ö –º–æ–¥—É–ª–µ–π –Ω–µ—Ç</b>"
            )

        return await utils.answer(
            message, "<emoji id=5956561916573782596>üìÑ</emoji> <b>–°–ø–∏—Å–æ–∫ —Å–∫—Ä—ã—Ç—ã—Ö –º–æ–¥—É–ª–µ–π:</b>\n" + "\n".join(
                f"<emoji id=4972281662894244560>üõë</emoji> <code>{module}</code>"
                for module in hide_mods
            )
        )