#    Sh1t-UB (telegram userbot by sh1tn3t)
#    Copyright (C) 2021-2022 Sh1tN3t

#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.

#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

import logging
import asyncio

import os
import re
import sys

import atexit
import tempfile

import requests

from typing import List

from git import Repo
from git.exc import GitCommandError

from pyrogram import Client, types
from .. import loader, utils

VALID_URL = r"[-[\]_.~:/?#@!$&'()*+,;%<=>a-zA-Z0-9]+"
VALID_PIP_PACKAGES = re.compile(
    r"^\s*# required:(?: ?)((?:{url} )*(?:{url}))\s*$".format(url=VALID_URL),
    re.MULTILINE,
)
GIT_REGEX = re.compile(
    r"^https?://github\.com((?:/[a-z0-9-]+){2})(?:/tree/([a-z0-9-]+)((?:/[a-z0-9-]+)*))?/?$",
    flags=re.IGNORECASE,
)


async def get_git_raw_link(repo_url: str):
    """–ü–æ–ª—É—á–∏—Ç—å raw —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    match = GIT_REGEX.search(repo_url)
    if not match:
        return False

    repo_path = match.group(1)
    branch = match.group(2)
    path = match.group(3)

    r = await utils.run_sync(requests.get, f"https://api.github.com/repos{repo_path}")
    if r.status_code != 200:
        return False

    branch = branch or r.json()["default_branch"]

    return f"https://raw.githubusercontent.com{repo_path}/{branch}{path or ''}/"


@loader.module(name="Loader", author="sh1tn3t")
class LoaderMod(loader.Module):
    """–ó–∞–≥—Ä—É–∑—á–∏–∫ –º–æ–¥—É–ª–µ–π"""

    async def dlmod_cmd(self, app: Client, message: types.Message, args: str):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å –ø–æ —Å—Å—ã–ª–∫–µ. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: dlmod <—Å—Å—ã–ª–∫–∞ –∏–ª–∏ all –∏–ª–∏ –Ω–∏—á–µ–≥–æ>"""
        modules_repo = self.db.get(
            "sh1t-ub.loader", "repo",
            "https://github.com/sh1tn3t/sub-modules"
        )
        api_result = await get_git_raw_link(modules_repo)
        if not api_result:
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!</b>\n"
                         "<b>–ü–æ–º–µ–Ω—è–π –µ—ë —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã: <code>dlrepo</code> (—Å—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–ª–∏ <code>reset</code>)</b>"
            )

        raw_link = api_result
        modules = await utils.run_sync(requests.get, raw_link + "all.txt")
        if modules.status_code != 200:
            return await utils.answer(
                message, (
                    f"<emoji id=5210952531676504517>‚ùå</emoji> –í <a href=\"{modules_repo}\">—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏</a> <b>–Ω–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª all.txt</b>\n"
                    f"<b>–ü—Ä–∏–º–µ—Ä:</b> https://github.com/sh1tn3t/sub-modules/blob/main/all.txt"
                ), disable_web_page_preview=True
            )

        modules: List[str] = modules.text.splitlines()

        if not args:
            text = (
                f"üì• <b>–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥—É–ª–µ–π —Å</b> <a href=\"{modules_repo}\">—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è</a>:\n\n"
                + "<code>all</code> - <b>–∑–∞–≥—Ä—É–∑–∏—Ç –≤—Å–µ –º–æ–¥—É–ª–∏</b>\n"
                + "\n".join(
                    map("<code>{}</code>".format, modules))
            )
            return await utils.answer(
                message, text, disable_web_page_preview=True)

        error_text: str = None
        module_name: str = None
        count = 0

        if args == "all":
            for module in modules:
                module = raw_link + module + ".py"
                try:
                    r = await utils.run_sync(requests.get, module)
                    if r.status_code != 200:
                        raise requests.exceptions.RequestException
                except requests.exceptions.RequestException:
                    continue

                if not (module_name := await self.all_modules.load_module(r.text, r.url)):
                    continue

                self.db.set("sh1t-ub.loader", "modules",
                            list(set(self.db.get("sh1t-ub.loader", "modules", []) + [module])))
                count += 1
        else:
            if args in modules:
                args = raw_link + args + ".py"

            try:
                r = await utils.run_sync(requests.get, args)
                if r.status_code != 200:
                    raise requests.exceptions.ConnectionError

                module_name = await self.all_modules.load_module(r.text, r.url)
                if module_name is True:
                    error_text = "<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞</b>"

                if not module_name:
                    error_text = "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–º–æ—Ç—Ä–∏ –≤ –ª–æ–≥–∞—Ö</b>"
            except requests.exceptions.MissingSchema:
                error_text = "<emoji id=5210952531676504517>‚ùå</emoji> <b>–°—Å—ã–ª–∫–∞ —É–∫–∞–∑–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ</b>"
            except requests.exceptions.ConnectionError:
                error_text = "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ú–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ</b>"
            except requests.exceptions.RequestException:
                error_text = "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–º–æ—Ç—Ä–∏ –≤ –ª–æ–≥–∞—Ö</b>"

            if error_text:
                return await utils.answer(message, error_text)

            self.db.set("sh1t-ub.loader", "modules",
                        list(set(self.db.get("sh1t-ub.loader", "modules", []) + [args])))

        return await utils.answer(
            message, (
                f"<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ú–æ–¥—É–ª—å \"<code>{module_name}</code>\" –∑–∞–≥—Ä—É–∂–µ–Ω</b>"
                if args != "all"
                else f"‚úÖ <b>–ó–∞–≥—Ä—É–∂–µ–Ω–æ <code>{count}</code> –∏–∑ <code>{len(modules)}</code> –º–æ–¥—É–ª–µ–π</b>"
            )
        )

    async def loadmod_cmd(self, app: Client, message: types.Message):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å –ø–æ —Ñ–∞–π–ª—É. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <—Ä–µ–ø–ª–∞–π –Ω–∞ —Ñ–∞–π–ª>"""
        reply = message.reply_to_message
        file = (
            message
            if message.document
            else reply
            if reply and reply.document
            else None
        )

        if not file:
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ–æ–±—Ö–æ–¥–∏–º –æ—Ç–≤–µ—Ç –Ω–∞ —Ñ–∞–π–ª</b>")

        temp_file = tempfile.NamedTemporaryFile("w")
        await file.download(temp_file.name)

        try:
            with open(temp_file.name, "r", encoding="utf-8") as file:
                module_source = file.read()
        except UnicodeDecodeError:
            temp_file.close()
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–∞</b>")

        module_name = await self.all_modules.load_module(module_source)
        if module_name is True:
            return await utils.answer(
                message, "<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞</b>")

        if not module_name:
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Å–º–æ—Ç—Ä–∏ –≤ –ª–æ–≥–∞—Ö</b>")

        temp_file.close()
        return await utils.answer(
            message, f"<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ú–æ–¥—É–ª—å \"<code>{module_name}</code>\" –∑–∞–≥—Ä—É–∂–µ–Ω</b>")

    async def unloadmod_cmd(self, app: Client, message: types.Message, args: str):
        """–í—ã–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: unloadmod <–Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è>"""
        if not (module_name := self.all_modules.unload_module(args)):
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è</b>")

        return await utils.answer(
            message, f"<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–ú–æ–¥—É–ª—å \"<code>{module_name}</code>\" –≤—ã–≥—Ä—É–∂–µ–Ω</b>")

    async def dlrepo_cmd(self, app: Client, message: types.Message, args: str):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –º–æ–¥—É–ª—è–º–∏. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: dlrepo <—Å—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–ª–∏ reset>"""
        if not args:
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤</b>")

        if args == "reset":
            self.db.set(
                "sh1t-ub.loader", "repo",
                "https://github.com/sh1tn3t/sub-modules"
            )
            return await utils.answer(
                message, "<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –±—ã–ª–∞ —Å–±—Ä–æ—à–µ–Ω–∞</b>")

        if not await get_git_raw_link(args):
            return await utils.answer(
                message, "<emoji id=5210952531676504517>‚ùå</emoji> <b>–°—Å—ã–ª–∫–∞ —É–∫–∞–∑–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ</b>")

        self.db.set("sh1t-ub.loader", "repo", args)
        return await utils.answer(
            message, "<emoji id=5206607081334906820>‚úîÔ∏è</emoji> <b>–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞</b>")